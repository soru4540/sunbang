<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chatMapper">

<resultMap type="Chat" id="resultChat">
<result property="chat_no" column="chat_no"/>
<result property="user_no" column="user_no"/>
<result property="chat_name" column="chat_name"/>
<result property="chat_type" column="chat_type"/>
<result property="alert_status" column="alert_status"/>
<result property="join_time" column="join_time"/>
<result property="away_time" column="away_time"/>
<result property="check_join" column="check_join"/>
<result property="realty_no" column="realty_no"/>
<result property="nickname" column="nickname"/>
<result property="user_profile" column="user_profile"/>
</resultMap>


<resultMap type="Message" id="resultMessage">
<id property="message_no" column="message_no" />
<result property="message" column="message"/>
<result property="message_image" column="message_image"/>
<result property="origin_filename" column="origin_filename"/>
<result property="renew_filename" column="renew_filename"/>
<result property="post_time" column="post_time"/>
<result property="chat_no" column="chat_no"/>
<result property="user_no" column="user_no"/>
<result property="nickname" column="nickname"/>
<result property="user_profile" column="user_profile"/>
</resultMap>


<resultMap type="ChatBlock" id="resultChatBlock">
<id property="block_no" column="block_no"/>
<result property="block_user" column="block_user"/>
<result property="block_time" column="block_time"/>
<result property="user_no" column="user_no"/>
</resultMap>


<select id="selectMyListFilterChat" parameterType="_int" resultMap="resultChat">
SELECT * FROM(
SELECT CHAT_NO, USER_NO ,CHAT_NAME ,CHAT_TYPE ,ALERT_STATUS ,TO_CHAR(JOIN_TIME, 'YY/MM/DD/HH24/MI/SS') JOIN_TIME, TO_CHAR(AWAY_TIME, 'YY/MM/DD/HH24/MI/SS') AWAY_TIME,CHECK_JOIN, REALTY_NO
FROM TB_CHAT
JOIN TB_USER USING(USER_NO)
WHERE USER_NO = #{user_no} AND USER_STATUS IN(0, 1, 2 ,4, 9) AND CHAT_TYPE IN ('관리자', '개인', '부동산')
UNION
SELECT CHAT_NO, NULL ,CHAT_NAME , CHAT_TYPE ,NULL ,NULL, NULL,NULL, NULL
FROM TB_CHAT
WHERE CHAT_TYPE = '단체')
</select>

<select id="selectListMessage" parameterType="_int" resultMap="resultMessage">
<![CDATA[SELECT *
FROM (SELECT TB_MESSAGE.MESSAGE_NO, MESSAGE, MESSAGE_IMAGE, ORIGIN_FILENAME, RENEW_FILENAME, TO_CHAR(POST_TIME,  'AM HH:MI') POST_TIME, TB_MESSAGE.CHAT_NO, TB_MESSAGE.USER_NO, UR.NICKNAME, UR.USER_PROFILE,
NVL(CHECKBLOCK, 'N') CHECKBLOCK, (USER_COUNT- READ_COUNT) READ_COUNT
FROM TB_USER
JOIN TB_CHAT ON(TB_USER.USER_NO = TB_CHAT.USER_NO)
JOIN TB_MESSAGE ON(TB_CHAT.CHAT_NO = TB_MESSAGE.CHAT_NO)
JOIN TB_USER UR ON(TB_MESSAGE.USER_NO = UR.USER_NO)
LEFT JOIN
(SELECT NVL((CASE WHEN TO_CHAR(POST_TIME, 'YYYYMMDDHH24MISS') <= TO_CHAR(BLOCK_TIME, 'YYYYMMDDHH24MISS') THEN 'Y'
                        WHEN TO_CHAR(POST_TIME, 'YYYYMMDDHH24MISS') > TO_CHAR(BLOCK_TIME, 'YYYYMMDDHH24MISS') THEN 'N' END),'N') CHECKBLOCK, MESSAGE_NO, TB_CHATBLOCK.USER_NO
FROM TB_CHATBLOCK
JOIN TB_MESSAGE ON (TB_CHATBLOCK.BLOCK_USER = TB_MESSAGE.USER_NO))CB ON(TB_USER.USER_NO = CB.USER_NO AND TB_MESSAGE.MESSAGE_NO = CB.MESSAGE_NO)
JOIN
(SELECT COUNT(*) READ_COUNT, MESSAGE_NO FROM TB_CHAT
JOIN TB_MESSAGE ON(TB_MESSAGE.CHAT_NO = TB_CHAT.CHAT_NO)
WHERE NVL(TO_CHAR(AWAY_TIME, 'YYYYMMDDHH24MISS'),TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) > TO_CHAR(POST_TIME, 'YYYYMMDDHH24MISS')
GROUP BY MESSAGE_NO) RC ON (TB_MESSAGE.MESSAGE_NO = RC.MESSAGE_NO)
JOIN(SELECT COUNT(USER_NO) USER_COUNT, CHAT_NO FROM TB_CHAT
GROUP BY CHAT_NO )CC ON (CC.CHAT_NO = TB_CHAT.CHAT_NO)
WHERE TB_MESSAGE.CHAT_NO = #{chat_no} AND TB_USER.USER_NO = #{user_no}
)
WHERE CHECKBLOCK = 'N' ORDER BY MESSAGE_NO]]>
</select>

<select id="selectMylistChatBlock" parameterType="_int" resultMap="resultChatBlock">
SELECT BLOCK_NO, BLOCK_USER, TO_CHAR(BLOCK_TIME, 'MM')||'월'||TO_CHAR(BLOCK_TIME, 'DD')||'일' BLOCK_TIME, CB.USER_NO, NICKNAME, USER_PROFILE
FROM TB_CHATBLOCK CB
JOIN TB_USER U ON(U.USER_NO = CB.BLOCK_USER)
WHERE CB.USER_NO = #{userno}
</select>

<select id="selectListChatUser" parameterType="Chat" resultMap="resultChat">
SELECT US.USER_NO, TB_CHAT.CHAT_NO, US.NICKNAME, US.USER_PROFILE, NVL2(BLOCK_USER, 'Y', 'N') check_join
FROM TB_USER
JOIN TB_CHAT ON (TB_USER.USER_NO = TB_CHAT.USER_NO)
JOIN (
SELECT TB_USER.USER_NO, CHAT_NO, NICKNAME, USER_PROFILE FROM TB_USER
JOIN TB_CHAT ON(TB_USER.USER_NO= TB_CHAT.USER_NO)
)US ON(TB_CHAT.CHAT_NO = US.CHAT_NO)
LEFT JOIN TB_CHATBLOCK ON(US.USER_NO = TB_CHATBLOCK.BLOCK_USER AND TB_USER.USER_NO = TB_CHATBLOCK.USER_NO)
WHERE TB_USER.USER_NO = #{user_no} AND TB_CHAT.CHAT_NO = #{chat_no}
</select>

<select id="selectCheckChat" parameterType="Chat" resultType="Chat">
SELECT CHAT_NO FROM TB_CHAT
WHERE USER_NO =#{user_no}  AND realty_no=#{realty_no}
</select>

<select id="selectChatChatCheck" parameterType="Chat" resultType="Chat">
SELECT * FROM TB_CHAT WHERE CHAT_NO = #{chat_no} AND USER_NO = #{user_no}
</select>

<select id="selectCheckChattwo" parameterType="Chat" resultType="Chat">
SELECT CHAT_NO FROM TB_CHAT
WHERE USER_NO =#{user_no}  AND chat_type = '관리자'
</select>

<select id="selectUserChat" parameterType="String" resultType="User">
SELECT * FROM TB_USER
WHERE nickname = #{nickname}
</select>

<insert id="insertChatChatCheck" parameterType="Chat">
INSERT INTO TB_CHAT VALUES(#{chat_no}, #{user_no}, #{chat_name}, '단체', default, sysdate, null, 'y', null)
</insert>

<insert id="insertChat" parameterType="Chat">
<choose>
	<when test="chat_no == 0">
INSERT INTO TB_CHAT VALUES(chat_seq.nextval, #{user_no}, null, '부동산', default, sysdate, null, 'y', #{realty_no})
	</when>
	<when test="chat_no == 1">
INSERT INTO TB_CHAT VALUES(chat_seq.currval, #{user_no}, null, '부동산', default, sysdate, null, 'y', #{realty_no})
	</when>
</choose>
</insert>

<insert id="insertaChat" parameterType="User">
<selectKey keyProperty="user_no" resultType="int" order="BEFORE">
	select user_no from tb_user where user_id = #{user_id}
</selectKey>
INSERT INTO TB_CHAT VALUES(chat_seq.nextval, #{user_no}, null, '관리자', default, sysdate, null, 'y', null)
</insert>

<insert id="insertTeamChat" parameterType="Chat">
INSERT INTO TB_CHAT VALUES(chat_seq.nextval, 0, #{chat_name}, '단체', default, sysdate, null, 'y', null)
</insert>

<insert id="insertbChat">
INSERT INTO TB_CHAT VALUES(chat_seq.currval, 0, null, '관리자', default, sysdate, null, 'y', null)
</insert>
<insert id="insertMessage" parameterType="Message">
INSERT INTO TB_MESSAGE(MESSAGE_NO, MESSAGE, POST_TIME, CHAT_NO, USER_NO) VALUES(MESSAGE_SEQ.NEXTVAL, #{message}, DEFAULT, #{chat_no}, #{user_no})
</insert>

<insert id="insertMessageImg" parameterType="Message">
INSERT INTO TB_MESSAGE(MESSAGE_NO, MESSAGE_IMAGE, POST_TIME, CHAT_NO, USER_NO) VALUES(MESSAGE_SEQ.NEXTVAL, #{message_image}, DEFAULT, #{chat_no}, #{user_no})
</insert>


<insert id="insertMessageFile" parameterType="Message">
INSERT INTO TB_MESSAGE(MESSAGE_NO, ORIGIN_FILENAME, RENEW_FILENAME, POST_TIME, CHAT_NO, USER_NO) VALUES(MESSAGE_SEQ.NEXTVAL, #{origin_filename}, #{renew_filename}, DEFAULT, #{chat_no}, #{user_no})
</insert>

<insert id="insertUserChat" parameterType="Chat">
INSERT INTO TB_CHAT VALUES(chat_seq.nextval, #{user_no}, null, '개인', default, sysdate, null, 'y', null)
</insert>

<insert id="inserttwoUserChat" parameterType="Chat">
INSERT INTO TB_CHAT VALUES(chat_seq.currval, #{chat_no}, null, '개인', default, sysdate, null, 'y', null)
</insert>

<delete id="deleteChat" parameterType="Chat">
delete from tb_chat where user_no=#{user_no} and chat_no=#{chat_no}
</delete>

<delete id="deleteMessage" parameterType="_int">
DELETE TB_MESSAGE WHERE MESSAGE_NO = #{message_no}
</delete>

<insert id="insertChatBlock" parameterType="ChatBlock">
insert into tb_chatblock values(chatblock_seq.nextval, #{block_user},  default, #{user_no})
</insert>

<delete id="deleteChatBlock" parameterType="ChatBlock">
delete from tb_chatblock
where block_no = #{block_no}
</delete>



</mapper>