<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="interiorMapper">

<resultMap type="BoardFull" id="resultBoardFull">
	<id property="board_no" column="board_no"/>
		<result property="board_type" column="board_type" />
		<result property="space" column="space" />
		<result property="housing_type" column="housing_type" />
		<result property="category1" column="category1" />
		<result property="category2" column="category2" />
		<result property="category3" column="category3" />
		<result property="floor_area" column="floor_area" />
		<result property="color1" column="color1" />
		<result property="color2" column="color2" />
		<result property="color3" column="color3" />
		<result property="board_title" column="board_title" />
		<result property="budget" column="budget" />
		<result property="style" column="style" />
		<result property="board_hits" column="board_hits" />
		<result property="board_date" column="board_date" />
		<result property="board_status" column="board_status" />		
		<result property="post_no" column="post_no"/>
        <result property="post_keyword" column="post_keyword" />
        <result property="post_data" column="post_data" />
        <result property="post_contents" column="post_contents" />
        <result property="marker_no" column="marker_no"/>
        <result property="product_image" column="product_image" />
        <result property="cordi_x" column="cordi_x" />
        <result property="cordi_y" column="cordi_y" />
        <result property="product_url" column="product_url" />
        <result property="user_no" column="user_no" />	
        <result property="user_profile" column="user_profile" />
        <result property="nickname" column="nickname" />
        <result property="user_name" column="user_name" /> 
        <result property="like_count" column="like_count" /> 
        <result property="follow_count" column="follow_count" /> 
        
</resultMap>

<resultMap type="Board" id="resultBoard">
	<id property="board_no" column="board_no"/>
		<result property="board_type" column="board_type" />
		<result property="space" column="space" />
		<result property="housing_type" column="housing_type" />
		<result property="category1" column="category1" />
		<result property="category2" column="category2" />
		<result property="category3" column="category3" />
		<result property="floor_area" column="floor_area" />
		<result property="color1" column="color1" />
		<result property="color2" column="color2" />
		<result property="color3" column="color3" />
		<result property="board_title" column="board_title" />
		<result property="budget" column="budget" />
		<result property="style" column="style" />
		<result property="board_hits" column="board_hits" />
		<result property="board_date" column="board_date" />
		<result property="board_status" column="board_status" />
		<result property="user_no" column="user_no" />	
</resultMap>

<resultMap type="Post" id="resultPost">
   <id property="post_no" column="post_no"/>
   <result property="post_keyword" column="post_keyword" />
   <result property="post_data" column="post_data" />
   <result property="post_contents" column="post_contents" />
   <result property="board_no" column="board_no" />      
</resultMap>

<resultMap type="Marker" id="resultMarker">
    <id property="marker_no" column="marker_no"/>
    <result property="product_image" column="product_image" />
    <result property="cordi_x" column="cordi_x" />
    <result property="cordi_y" column="cordi_y" />
    <result property="product_url" column="product_url" />
    <result property="post_no" column="post_no" />      
</resultMap>

<resultMap type="Reply" id="resultReply">
   <id property="reply_no" column="reply_no"/>
    <result property="reply_lev" column="reply_lev" />
    <result property="orgin_reply_no" column="orgin_reply_no" />
    <result property="reply_contents" column="reply_contents" />
    <result property="user_no" column="user_no" />
    <result property="board_no" column="board_no" />   
</resultMap>

<resultMap type="Like" id="resultLike">
    <id property="like_no" column="like_no"/>
      <result property="user_no" column="user_no" />
        <result property="board_no" column="board_no" />
</resultMap>

<resultMap type="Follow" id="resultFollow">
    <id property="follow_no" column="follow_no"/>
     <result property="follower_no" column="follower_no" />
      <result property="user_no" column="user_no" />    
</resultMap>

<resultMap type="Ipaging" id="resultIpaging">
    <id property="page" column="page"/>
    <result property="start_num" column="start_num" />
    <result property="end_num" column="end_num" />    
    <result property="board_type" column="board_type" />
    <result property="user_no" column="user_no" />    
</resultMap>


<select id="selectHbTop1" resultMap="resultBoardFull">
select board_no,board_type,board_title,board_hits,post_no,post_keyword,post_data, user_no, nickname,user_profile,like_count
from (select board_no,board_type,board_title,board_hits,post_no,post_keyword,post_data, user_no, nickname,user_profile,nvl(like_count,0) like_count from tb_board
left join tb_post using(board_no)
left join tb_user using(user_no)
left join(select count(user_no) like_count, board_no from tb_like
group by board_no) using(board_no)
where post_no in (SELECT MIN(post_no)
                  FROM tb_post
                  GROUP BY board_no)
      and board_type='housewarming'            
order by board_hits desc, like_count desc, board_no desc
)
where rownum =1
</select>

<select id="selectKbTop4" resultMap="resultBoardFull">
<![CDATA[ select board_no,board_type,board_title,board_hits,post_no,post_keyword,post_data, user_no, nickname,user_profile,like_count
from (select board_no,board_type,board_title,board_hits,post_no,post_keyword,post_data, user_no, nickname,user_profile,nvl(like_count,0) like_count from tb_board
left join tb_post using(board_no)
left join tb_user using(user_no)
left join(select count(user_no) like_count, board_no from tb_like
group by board_no) using(board_no)
where post_no in (SELECT MIN(post_no)
                  FROM tb_post
                  GROUP BY board_no)
      and board_type='knowhow'            
order by board_hits desc, like_count desc, board_no desc
)
where rownum <5 ]]>
</select>

<select id="selectHbTop3" resultMap="resultBoardFull">
<![CDATA[ select board_no,board_type,board_hits,post_no,post_keyword,post_data, user_no, nickname,user_profile,like_count
from (select board_no,board_type,board_hits,post_no,post_keyword,post_data, user_no, nickname,user_profile,nvl(like_count,0) like_count from tb_board
left join tb_post using(board_no)
left join tb_user using(user_no)
left join(select count(user_no) like_count, board_no from tb_like
group by board_no) using(board_no)
where post_no in (SELECT MIN(post_no)
                  FROM tb_post
                  GROUP BY board_no)
      and board_type='housewarming'            
order by board_hits desc, like_count desc, board_no desc
)
where rownum <4 ]]>
</select>

<select id="selectPbTop8" resultMap="resultBoardFull">
<![CDATA[ select board_no,board_type,board_hits,post_no,post_keyword,post_data, user_no, nickname,user_profile,like_count
from (select board_no,board_type,board_hits,post_no,post_keyword,post_data, user_no, nickname,user_profile,nvl(like_count,0) like_count from tb_board
left join tb_post using(board_no)
left join tb_user using(user_no)
left join(select count(user_no) like_count, board_no from tb_like
group by board_no) using(board_no)
where post_no in (SELECT MIN(post_no)
                  FROM tb_post
                  GROUP BY board_no)
      and board_type='photograph'            
order by board_hits desc, like_count desc, board_no desc
)
where rownum <9 ]]>
</select>

<!-- 게시판등록 -->
<insert id="insertBoard" parameterType="Board">
<choose>
<when test="board_type.equals('photograph')"></when>
<when test="board_type.equals('housewarming')"></when>
<when test="board_type.equals('knowhow')">
insert into tb_board (board_no,board_type,category1,category2,category3,board_title,board_hits,board_date,board_status,user_no) 
values(board_seq.nextval,#{board_type},#{category1},#{category2},#{category3},#{board_title},0,default,default,#{user_no})
</when>
</choose>
</insert>

<!-- 게시판번호 불러오기 -->
<select id="selectBoardNo" parameterType="_int" resultType="_int">
select board_no from tb_board where user_no = #{user_no} and rownum = 1 order by board_no desc
</select>

<!-- 게시물등록 -->
<insert id="insertPost" parameterType="Post">
insert into tb_post values(post_seq.nextval,#{post_keyword},#{post_data,jdbcType=VARCHAR},#{post_contents,jdbcType=VARCHAR},#{board_no})
</insert>

<!-- 게시판리스트 카운트 -->
<select id="selectListCount" parameterType="string" resultType="_int">
select count(board_no) from tb_board where board_type = #{board_type}
</select>

<!-- 게시판리스트 출력 -->
<select id="selectBoardList" parameterType="Ipaging" resultMap="resultBoardFull">
<![CDATA[ select *
from (select row_number() over(order by board_no desc) as rnum, board_no,board_title,board_type,board_hits,post_no,post_keyword,post_data, user_no, nickname,user_profile,nvl(like_count,0) like_count from tb_board
left join tb_post using(board_no)
left join tb_user using(user_no)
left join(select count(user_no) like_count, board_no from tb_like
group by board_no) using(board_no)
where post_no in (SELECT MIN(post_no)
                  FROM tb_post
                  GROUP BY board_no)
      and board_type= #{board_type}            
)where rnum >= #{start_num} and rnum <= #{end_num} ]]>
</select>

<!-- 좋아요 체크 리스트 출력 -->
<select id="selectLikeCheck" parameterType="_int" resultMap="resultLike">
select * from tb_like where user_no= #{user_no} 
</select>

<!-- 좋아요 등록 -->
<insert id="insertLike" parameterType="Like">
insert into tb_like values(like_seq.nextval,#{user_no},#{board_no})
</insert>

<!-- 좋아요 삭제 -->
<delete id="deleteLike" parameterType="Like">
delete from tb_like where user_no=#{user_no} and board_no=#{board_no}
</delete>

</mapper>